{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","console","log","min","steps","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpensesFilter","selected","onChangeFilter","ChartBar","barFilledHeight","maxValue","round","style","height","label","Chart","dataPointsValues","dataPoints","map","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Card","classes","children","ExpenseDate","dateLac","toLocaleString","month","year","day","ExpenseItem","ExpensesList","item","length","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","getFullYear","selectedYear","dummy_expenses","App","setExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f632d998.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (e) => {\r\n      setEnteredTitle(e.target.value);\r\n      console.log('title changed!');\r\n\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n\r\n  }; \r\n\r\n  const amountChangeHandler = (e) =>{\r\n    setEnteredAmount(e.target.value);\r\n    console.log('amount changed!');\r\n\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n\r\n  }\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n    console.log('date changed!');\r\n\r\n    \r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate)\r\n    }\r\n\r\n    //console.log(expenseData);\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    //--->>__TWO WAY BINDING__<<--- (To delete the input when the form has submitted)\r\n    setEnteredTitle('');\r\n    setEnteredDate('');\r\n    setEnteredAmount('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label> \r\n          <input type=\"number\" min=\"1\" value={enteredAmount} steps=\"1\" onChange={amountChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2020-01-01\" value={enteredDate} max=\"2023-12-31\" onChange={dateChangeHandler}/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button className=\"new-expense__actions\" type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button className=\"new-expense__actions\" type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  //name of the parameters are upto us\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    console.log(expenseData);\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n      setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n      setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense.</button>}\r\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n      {/*value for this prop onSaveExpense will be a function which is eventually triggered when something happens inside of this componenet(SUBMIT ACTION)*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (e) => {\r\n    props.onChangeFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFilledHeight = '0%';\r\n\r\n    if(props.maxValue > 0){ // If the givenData Points we have a max Value greater than Zero\r\n        barFilledHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                {/* Now setting style of a Element Dynamically ,,, So in REACT style attribute expects an Object as a Value*/}\r\n                <div className=\"chart-bar__fill\" style={{height: barFilledHeight}} ></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n      {/*Creating as many ChartBar Components as dataPoints available*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); // starting at 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;","import './Card.css';\r\n\r\n//now this Card Container component which will work as a shell around our expense item conttent\r\nfunction Card(props){//this is special prop, that every componenet recieve and we will use this to make it a wrapper component\r\n\r\n    //Below Code will allow Custom Components to accept ClassNames and has an affect\r\n    const classes = 'card ' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>;//value of props.children is the in between content between opening and closing tag of your custom components\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css';\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction ExpenseDate(props){\r\n    // console.log(props.date.toLocaleString('en-IN',{\r\n    //     month:'long',\r\n    //     year:'numeric',\r\n    //     day:'2-digit'\r\n    // }));\r\n    const dateLac = props.date.toLocaleString('en-IN', {\r\n        month:'long',\r\n        year:'numeric',\r\n        day:'2-digit'\r\n    });\r\n\r\n    //const classes = \"card \" + props.className;\r\n\r\n    return (\r\n        <Card className=\"expense-date\">{dateLac}</Card>\r\n    )\r\n};\r\n\r\nexport default ExpenseDate;","import React/*, { useState }*/ from 'react';//importing default React and named useState \r\n//useState is the function provided by the react library and this allows us to define values as state where changes to these values should reflect in the component function to be CALLED AGAIN\r\n//we use/call this directly inside of the component FUNCTION\r\n//by use state we create a special kind of value who's change in value will lead to recall of that component\r\n\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nimport Card from '../UI/Card';\r\n//COMPONENT in REACT is Written as Just a function in JS which we will then EXPORT\r\n\r\nfunction ExpenseItem(props) { //in react we will be getting only one parameter and that will be an Object\r\n\r\n//   const expenseDate = new Date();//creating Date Objects\r\n//   const expenseTitle = 'Car Insurance';\r\n//   const expenseAmount = 294.67;\r\n\r\n//getting access to the values of props defined as Attributes to custom Components\r\n// const dateLac = props.date.toLocaleString('en-US', {\r\n//     month:'long',\r\n//     year:'numeric',\r\n//     day:'2-digit'\r\n// });\r\n\r\n\r\n  //const [title, setTitle] = useState(props.title);//assigning initial value\r\n//1.) useState is a so called REACT-HOOK\r\n//2.) all react-hooks start with the word **use**\r\n//3.) useState(); wants a default state value\r\n//4.) return kya krta hai useState()?? ---> It returns an array where first element is the current state value and the second element is the updating function \r\n\r\n\r\n  //To write dynamic data inside below JSX code snippets,, React gives special Syntax ie --> {}\r\n\r\n  //let title = props.title; //Here regular variable are not triggering re-evaluation of Overall Component in which we want to set Dynamic Data,,,,,mtlb final rendering ke baad dubara Execute nhi hota react components\r\n\r\n  // const clickHandler = () => {\r\n  //   //title = 'Updated!';\r\n  //   setTitle('Updated!');//ye krney se jiss component mein useState() function hoga vo dubara execute hoga changed variable state ke saath \r\n  //   console.log(title);\r\n  // }\r\n\r\n  return (\r\n    //ek hi root element hona chahiye return statement mein mtlb JSX code mein\r\n    \r\n    //below Wrapper Custom Component only supports the syles that we have mentioned while it's building,\r\n    //Custom components does not accept the className as regular HTML elements do\r\n\r\n    <Card className=\"expense-item\"> \r\n      <ExpenseDate date={props.date}></ExpenseDate>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n      \r\n      {/* <button onClick={clickHandler}>Change Title</button> */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  // if (props.item.length > 0) {\r\n  //   expensesContent = props.item.map((expense) => (\r\n  //     <ExpenseItem\r\n  //       key={expense.id}\r\n  //       title={expense.title}\r\n  //       amount={expense.amount}\r\n  //       date={expense.date}\r\n  //     />\r\n  //   ));\r\n  // }\r\n\r\n  if (props.item.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.item.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from './ExpensesChart';\r\n//import ExpenseItem from \"./ExpenseItem\";\r\n// import \"./ExpenseItem\";\r\n// import \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\n\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    console.log(\"Expenses.js\");\r\n    console.log(selectedYear);\r\n\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.item.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n\r\n        <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\r\n\r\n        {/* {filteredExpenses.length === 0 ? (\r\n          <p>No Expenses Found.☹</p>\r\n        ) : (\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))\r\n        )} */}\r\n\r\n        <ExpensesList item={filteredExpenses}/>\r\n\r\n\r\n        {/* <ExpenseItem //this is almost like a function call or we can say that we make react aware of the ExpenseItem function\r\n          title={props.item[0].title}\r\n          amount={props.item[0].amount}\r\n          date={props.item[0].date}\r\n        />\r\n        <ExpenseItem\r\n          title={props.item[1].title}\r\n          amount={props.item[1].amount}\r\n          date={props.item[1].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.item[2].title}\r\n          amount={props.item[2].amount}\r\n          date={props.item[2].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.item[3].title}\r\n          amount={props.item[3].amount}\r\n          date={props.item[3].date}\r\n        ></ExpenseItem> */}\r\n\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n//import Card from \"./components/UI/Card\";\n//import ExpenseItem from \"./components/Expenses/ExpenseItem\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n//import ExpensesFilter from \"./components/Expenses/ExpensesFilter\";\nimport Expense from \"./components/Expenses/Expenses\";\n\nconst dummy_expenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk\",\n    amount: 450,\n    date: new Date(2021, 5, 1),\n  },\n];\n\n\nfunction App() {\n  // const expenses = [\n  //   { title: \"Car Insurance\", amount: 294.67, date: new Date(2021, 2, 28) },\n  //   { title: \"Car Insurance\", amount: 294.67, date: new Date(2021, 2, 28) },\n  //   { title: \"Car Insurance\", amount: 294.67, date: new Date(2021, 2, 28) },\n  // ];\n\n  const [expenses , setExpenses] = useState(dummy_expenses);\n\n  const addExpenseHandler = (expense) => {\n    console.log(\"In app.js\");\n    console.log(expense);\n\n    //setExpenses([expense, ...expenses]);//proper work nhi krega kyunki previous state pr depend krri hai new value\n\n    setExpenses((expenses) => {\n      return [expense, ...expenses];\n    });\n\n  };\n\n  //this 👇 below is the alternative of writing JSX code with React object and its method createElement\n\n  //JSX code jb bhi likhtey hai toh ye React.createElement method call hota hai hr baari\n\n  //return React.createElement(//custom or standard HTML element, //{options for configuring i.e attributes}, herre is the content between elements-->React.createElement('header', {className:App-header}))\n\n  return (\n    //this below code is waht we call-: JSX (JavaScript XML)\n\n    <div className=\"App-header\">\n      {/* <p className=\"App-link\">Let's Get Started With React</p> */}\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expense item={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';//ye jsx ko define krta hai \nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}